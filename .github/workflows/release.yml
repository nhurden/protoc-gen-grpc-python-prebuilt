name: Release protoc-gen-grpc-python

on:
  workflow_call:
    inputs:
      matrix:
        description: "Build matrix from the calling workflow"
        required: true
        type: string

jobs:
  get-versions:
    runs-on: ubuntu-24.04
    outputs:
      versions: ${{ steps.extract-versions.outputs.versions }}
    steps:
      - name: Extract unique versions
        id: extract-versions
        run: |
          # Extract unique gRPC versions from the matrix
          versions=$(echo '${{ inputs.matrix }}' | jq -r '.include[].grpc_version' | sort -u | jq -R . | jq -s .)
          echo "versions=$versions" >> $GITHUB_OUTPUT
          echo "Extracted versions: $versions"

  release:
    needs: [get-versions]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    strategy:
      matrix:
        grpc_version: ${{ fromJson(needs.get-versions.outputs.versions) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts for version
        uses: actions/download-artifact@v4
        with:
          pattern: "*-${{ matrix.grpc_version }}"
          merge-multiple: true
          path: release-artifacts

      - name: List artifacts
        run: |
          echo "Release artifacts:"
          ls -la release-artifacts/

      - name: Create checksums
        working-directory: release-artifacts
        run: |
          for file in *; do
            if [[ -f "$file" ]]; then
              sha256sum "$file" >> checksums-${{ matrix.grpc_version }}.txt
            fi
          done
          echo "Checksums:"
          cat checksums-${{ matrix.grpc_version }}.txt

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: release-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish release
        uses: release-drafter/release-drafter@v6
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
