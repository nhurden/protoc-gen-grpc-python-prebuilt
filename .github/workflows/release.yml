name: Release protoc-gen-grpc-python

on:
  workflow_call:
    inputs:
      matrix:
        description: "Build matrix from the calling workflow"
        required: true
        type: string

jobs:
  get-versions:
    runs-on: ubuntu-24.04
    outputs:
      versions: ${{ steps.extract-versions.outputs.versions }}
    steps:
      - name: Extract unique versions
        id: extract-versions
        run: |
          # Extract unique gRPC versions from the matrix
          versions=$(echo '${{ inputs.matrix }}' | jq -r '.include[].grpc_version' | sort -u | jq -R . | jq -s .)
          echo "versions=$versions" >> $GITHUB_OUTPUT
          echo "Extracted versions: $versions"

  release:
    needs: [get-versions]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    strategy:
      matrix:
        grpc_version: ${{ fromJson(needs.get-versions.outputs.versions) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts for version
        uses: actions/download-artifact@v4
        with:
          pattern: "*-${{ matrix.grpc_version }}"
          merge-multiple: true
          path: release-artifacts

      - name: List artifacts
        run: |
          echo "Release artifacts:"
          ls -la release-artifacts/

      - name: Create checksums
        working-directory: release-artifacts
        run: |
          for file in *; do
            if [[ -f "$file" ]]; then
              sha256sum "$file" >> checksums-${{ matrix.grpc_version }}.txt
            fi
          done
          echo "Checksums:"
          cat checksums-${{ matrix.grpc_version }}.txt

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ matrix.grpc_version }}
          name: gRPC Python Plugin ${{ matrix.grpc_version }}
          artifacts: "release-artifacts/*"
          token: ${{ github.token }}
          allowUpdates: true
          draft: false
          prerelease: false
          body: |
            # protoc-gen-grpc-python ${{ matrix.grpc_version }}

            Prebuilt binaries of the gRPC Python plugin compiled from [gRPC ${{ matrix.grpc_version }}](https://github.com/grpc/grpc/releases/tag/${{ matrix.grpc_version }}).

            ## Usage

            1. Download the appropriate binary for your platform
            2. Make it executable (Unix/macOS): `chmod +x protoc-gen-grpc-python-*`
            3. Use with protoc:
               ```bash
               protoc --plugin=protoc-gen-grpc-python=/path/to/binary \
                      --grpc-python_out=. \
                      your_service.proto
               ```

            ## Files

            - **protoc-gen-grpc-python-linux-x86_64**: Linux x86_64
            - **protoc-gen-grpc-python-macos-x86_64**: macOS Intel
            - **protoc-gen-grpc-python-macos-arm64**: macOS Apple Silicon
            - **checksums-${{ matrix.grpc_version }}.txt**: SHA256 checksums

            ## Verification

            Verify the downloaded binary using SHA256:
            ```bash
            sha256sum -c checksums-${{ matrix.grpc_version }}.txt
            ```
